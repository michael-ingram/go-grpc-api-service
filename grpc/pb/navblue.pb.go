// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.28.3
// source: grpc/proto/navblue.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FlightByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId string `protobuf:"bytes,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
}

func (x *FlightByIdRequest) Reset() {
	*x = FlightByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_navblue_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlightByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightByIdRequest) ProtoMessage() {}

func (x *FlightByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_navblue_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightByIdRequest.ProtoReflect.Descriptor instead.
func (*FlightByIdRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_navblue_proto_rawDescGZIP(), []int{0}
}

func (x *FlightByIdRequest) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

type FlightByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId                  string          `protobuf:"bytes,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	FlightDate                string          `protobuf:"bytes,2,opt,name=flight_date,json=flightDate,proto3" json:"flight_date,omitempty"`
	TailNumber                string          `protobuf:"bytes,3,opt,name=tail_number,json=tailNumber,proto3" json:"tail_number,omitempty"`
	AirlineDesignator         string          `protobuf:"bytes,4,opt,name=airline_designator,json=airlineDesignator,proto3" json:"airline_designator,omitempty"`
	FlightNumber              string          `protobuf:"bytes,5,opt,name=flight_number,json=flightNumber,proto3" json:"flight_number,omitempty"`
	OnwardFlightNumber        string          `protobuf:"bytes,6,opt,name=onward_flight_number,json=onwardFlightNumber,proto3" json:"onward_flight_number,omitempty"`
	Status                    string          `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	ScheduledDepartureAirport string          `protobuf:"bytes,8,opt,name=scheduled_departure_airport,json=scheduledDepartureAirport,proto3" json:"scheduled_departure_airport,omitempty"`
	ScheduledArrivalAirport   string          `protobuf:"bytes,9,opt,name=scheduled_arrival_airport,json=scheduledArrivalAirport,proto3" json:"scheduled_arrival_airport,omitempty"`
	Std                       string          `protobuf:"bytes,10,opt,name=std,proto3" json:"std,omitempty"`
	Sta                       string          `protobuf:"bytes,11,opt,name=sta,proto3" json:"sta,omitempty"`
	StdLocal                  string          `protobuf:"bytes,12,opt,name=std_local,json=stdLocal,proto3" json:"std_local,omitempty"`
	StaLocal                  string          `protobuf:"bytes,13,opt,name=sta_local,json=staLocal,proto3" json:"sta_local,omitempty"`
	OffsetDa                  string          `protobuf:"bytes,14,opt,name=offset_da,json=offsetDa,proto3" json:"offset_da,omitempty"`
	OffsetAa                  string          `protobuf:"bytes,15,opt,name=offset_aa,json=offsetAa,proto3" json:"offset_aa,omitempty"`
	AircraftManufacture       string          `protobuf:"bytes,16,opt,name=aircraft_manufacture,json=aircraftManufacture,proto3" json:"aircraft_manufacture,omitempty"`
	AircraftType              string          `protobuf:"bytes,17,opt,name=aircraft_type,json=aircraftType,proto3" json:"aircraft_type,omitempty"`
	AircraftConfig            string          `protobuf:"bytes,18,opt,name=aircraft_config,json=aircraftConfig,proto3" json:"aircraft_config,omitempty"`
	AircraftVersion           string          `protobuf:"bytes,19,opt,name=aircraft_version,json=aircraftVersion,proto3" json:"aircraft_version,omitempty"`
	FlightType                string          `protobuf:"bytes,20,opt,name=flight_type,json=flightType,proto3" json:"flight_type,omitempty"`
	ActualDepartureAirport    string          `protobuf:"bytes,21,opt,name=actual_departure_airport,json=actualDepartureAirport,proto3" json:"actual_departure_airport,omitempty"`
	ActualArrivalAirport      string          `protobuf:"bytes,22,opt,name=actual_arrival_airport,json=actualArrivalAirport,proto3" json:"actual_arrival_airport,omitempty"`
	DepartureGate             string          `protobuf:"bytes,23,opt,name=departure_gate,json=departureGate,proto3" json:"departure_gate,omitempty"`
	ArrivalGate               string          `protobuf:"bytes,24,opt,name=arrival_gate,json=arrivalGate,proto3" json:"arrival_gate,omitempty"`
	ActualTimes               *ActualTimes    `protobuf:"bytes,25,opt,name=actual_times,json=actualTimes,proto3" json:"actual_times,omitempty"`
	EstimatedTimes            *EstimatedTimes `protobuf:"bytes,26,opt,name=estimated_times,json=estimatedTimes,proto3" json:"estimated_times,omitempty"`
	PaxBooked                 int32           `protobuf:"varint,27,opt,name=pax_booked,json=paxBooked,proto3" json:"pax_booked,omitempty"`
	PaxFlown                  int32           `protobuf:"varint,28,opt,name=pax_flown,json=paxFlown,proto3" json:"pax_flown,omitempty"`
	Delays                    []*Delay        `protobuf:"bytes,29,rep,name=delays,proto3" json:"delays,omitempty"`
	BagsBooked                int32           `protobuf:"varint,30,opt,name=bags_booked,json=bagsBooked,proto3" json:"bags_booked,omitempty"`
	Fuels                     []*Fuel         `protobuf:"bytes,31,rep,name=fuels,proto3" json:"fuels,omitempty"`
	CrewCheckedIn             bool            `protobuf:"varint,32,opt,name=crew_checked_in,json=crewCheckedIn,proto3" json:"crew_checked_in,omitempty"`
	StarFlight                bool            `protobuf:"varint,33,opt,name=star_flight,json=starFlight,proto3" json:"star_flight,omitempty"`
	Desk                      string          `protobuf:"bytes,34,opt,name=desk,proto3" json:"desk,omitempty"`
}

func (x *FlightByIdResponse) Reset() {
	*x = FlightByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_navblue_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlightByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightByIdResponse) ProtoMessage() {}

func (x *FlightByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_navblue_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightByIdResponse.ProtoReflect.Descriptor instead.
func (*FlightByIdResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_navblue_proto_rawDescGZIP(), []int{1}
}

func (x *FlightByIdResponse) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *FlightByIdResponse) GetFlightDate() string {
	if x != nil {
		return x.FlightDate
	}
	return ""
}

func (x *FlightByIdResponse) GetTailNumber() string {
	if x != nil {
		return x.TailNumber
	}
	return ""
}

func (x *FlightByIdResponse) GetAirlineDesignator() string {
	if x != nil {
		return x.AirlineDesignator
	}
	return ""
}

func (x *FlightByIdResponse) GetFlightNumber() string {
	if x != nil {
		return x.FlightNumber
	}
	return ""
}

func (x *FlightByIdResponse) GetOnwardFlightNumber() string {
	if x != nil {
		return x.OnwardFlightNumber
	}
	return ""
}

func (x *FlightByIdResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FlightByIdResponse) GetScheduledDepartureAirport() string {
	if x != nil {
		return x.ScheduledDepartureAirport
	}
	return ""
}

func (x *FlightByIdResponse) GetScheduledArrivalAirport() string {
	if x != nil {
		return x.ScheduledArrivalAirport
	}
	return ""
}

func (x *FlightByIdResponse) GetStd() string {
	if x != nil {
		return x.Std
	}
	return ""
}

func (x *FlightByIdResponse) GetSta() string {
	if x != nil {
		return x.Sta
	}
	return ""
}

func (x *FlightByIdResponse) GetStdLocal() string {
	if x != nil {
		return x.StdLocal
	}
	return ""
}

func (x *FlightByIdResponse) GetStaLocal() string {
	if x != nil {
		return x.StaLocal
	}
	return ""
}

func (x *FlightByIdResponse) GetOffsetDa() string {
	if x != nil {
		return x.OffsetDa
	}
	return ""
}

func (x *FlightByIdResponse) GetOffsetAa() string {
	if x != nil {
		return x.OffsetAa
	}
	return ""
}

func (x *FlightByIdResponse) GetAircraftManufacture() string {
	if x != nil {
		return x.AircraftManufacture
	}
	return ""
}

func (x *FlightByIdResponse) GetAircraftType() string {
	if x != nil {
		return x.AircraftType
	}
	return ""
}

func (x *FlightByIdResponse) GetAircraftConfig() string {
	if x != nil {
		return x.AircraftConfig
	}
	return ""
}

func (x *FlightByIdResponse) GetAircraftVersion() string {
	if x != nil {
		return x.AircraftVersion
	}
	return ""
}

func (x *FlightByIdResponse) GetFlightType() string {
	if x != nil {
		return x.FlightType
	}
	return ""
}

func (x *FlightByIdResponse) GetActualDepartureAirport() string {
	if x != nil {
		return x.ActualDepartureAirport
	}
	return ""
}

func (x *FlightByIdResponse) GetActualArrivalAirport() string {
	if x != nil {
		return x.ActualArrivalAirport
	}
	return ""
}

func (x *FlightByIdResponse) GetDepartureGate() string {
	if x != nil {
		return x.DepartureGate
	}
	return ""
}

func (x *FlightByIdResponse) GetArrivalGate() string {
	if x != nil {
		return x.ArrivalGate
	}
	return ""
}

func (x *FlightByIdResponse) GetActualTimes() *ActualTimes {
	if x != nil {
		return x.ActualTimes
	}
	return nil
}

func (x *FlightByIdResponse) GetEstimatedTimes() *EstimatedTimes {
	if x != nil {
		return x.EstimatedTimes
	}
	return nil
}

func (x *FlightByIdResponse) GetPaxBooked() int32 {
	if x != nil {
		return x.PaxBooked
	}
	return 0
}

func (x *FlightByIdResponse) GetPaxFlown() int32 {
	if x != nil {
		return x.PaxFlown
	}
	return 0
}

func (x *FlightByIdResponse) GetDelays() []*Delay {
	if x != nil {
		return x.Delays
	}
	return nil
}

func (x *FlightByIdResponse) GetBagsBooked() int32 {
	if x != nil {
		return x.BagsBooked
	}
	return 0
}

func (x *FlightByIdResponse) GetFuels() []*Fuel {
	if x != nil {
		return x.Fuels
	}
	return nil
}

func (x *FlightByIdResponse) GetCrewCheckedIn() bool {
	if x != nil {
		return x.CrewCheckedIn
	}
	return false
}

func (x *FlightByIdResponse) GetStarFlight() bool {
	if x != nil {
		return x.StarFlight
	}
	return false
}

func (x *FlightByIdResponse) GetDesk() string {
	if x != nil {
		return x.Desk
	}
	return ""
}

type ActualTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActualBlockOff  string `protobuf:"bytes,1,opt,name=actual_block_off,json=actualBlockOff,proto3" json:"actual_block_off,omitempty"`
	ActualTakeOff   string `protobuf:"bytes,2,opt,name=actual_take_off,json=actualTakeOff,proto3" json:"actual_take_off,omitempty"`
	ActualTouchDown string `protobuf:"bytes,3,opt,name=actual_touch_down,json=actualTouchDown,proto3" json:"actual_touch_down,omitempty"`
	ActualBlockOn   string `protobuf:"bytes,4,opt,name=actual_block_on,json=actualBlockOn,proto3" json:"actual_block_on,omitempty"`
}

func (x *ActualTimes) Reset() {
	*x = ActualTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_navblue_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualTimes) ProtoMessage() {}

func (x *ActualTimes) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_navblue_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualTimes.ProtoReflect.Descriptor instead.
func (*ActualTimes) Descriptor() ([]byte, []int) {
	return file_grpc_proto_navblue_proto_rawDescGZIP(), []int{2}
}

func (x *ActualTimes) GetActualBlockOff() string {
	if x != nil {
		return x.ActualBlockOff
	}
	return ""
}

func (x *ActualTimes) GetActualTakeOff() string {
	if x != nil {
		return x.ActualTakeOff
	}
	return ""
}

func (x *ActualTimes) GetActualTouchDown() string {
	if x != nil {
		return x.ActualTouchDown
	}
	return ""
}

func (x *ActualTimes) GetActualBlockOn() string {
	if x != nil {
		return x.ActualBlockOn
	}
	return ""
}

type EstimatedTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstimatedBlockOff  string `protobuf:"bytes,1,opt,name=estimated_block_off,json=estimatedBlockOff,proto3" json:"estimated_block_off,omitempty"`
	EstimatedTakeOff   string `protobuf:"bytes,2,opt,name=estimated_take_off,json=estimatedTakeOff,proto3" json:"estimated_take_off,omitempty"`
	EstimatedTouchDown string `protobuf:"bytes,3,opt,name=estimated_touch_down,json=estimatedTouchDown,proto3" json:"estimated_touch_down,omitempty"`
	EstimatedBlockOn   string `protobuf:"bytes,4,opt,name=estimated_block_on,json=estimatedBlockOn,proto3" json:"estimated_block_on,omitempty"`
}

func (x *EstimatedTimes) Reset() {
	*x = EstimatedTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_navblue_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimatedTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimatedTimes) ProtoMessage() {}

func (x *EstimatedTimes) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_navblue_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimatedTimes.ProtoReflect.Descriptor instead.
func (*EstimatedTimes) Descriptor() ([]byte, []int) {
	return file_grpc_proto_navblue_proto_rawDescGZIP(), []int{3}
}

func (x *EstimatedTimes) GetEstimatedBlockOff() string {
	if x != nil {
		return x.EstimatedBlockOff
	}
	return ""
}

func (x *EstimatedTimes) GetEstimatedTakeOff() string {
	if x != nil {
		return x.EstimatedTakeOff
	}
	return ""
}

func (x *EstimatedTimes) GetEstimatedTouchDown() string {
	if x != nil {
		return x.EstimatedTouchDown
	}
	return ""
}

func (x *EstimatedTimes) GetEstimatedBlockOn() string {
	if x != nil {
		return x.EstimatedBlockOn
	}
	return ""
}

type Delay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Code2   string `protobuf:"bytes,2,opt,name=code2,proto3" json:"code2,omitempty"`
	Minutes string `protobuf:"bytes,3,opt,name=minutes,proto3" json:"minutes,omitempty"`
}

func (x *Delay) Reset() {
	*x = Delay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_navblue_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Delay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delay) ProtoMessage() {}

func (x *Delay) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_navblue_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delay.ProtoReflect.Descriptor instead.
func (*Delay) Descriptor() ([]byte, []int) {
	return file_grpc_proto_navblue_proto_rawDescGZIP(), []int{4}
}

func (x *Delay) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Delay) GetCode2() string {
	if x != nil {
		return x.Code2
	}
	return ""
}

func (x *Delay) GetMinutes() string {
	if x != nil {
		return x.Minutes
	}
	return ""
}

type Fuel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Source       string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Quantity     string `protobuf:"bytes,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	QuantityUnit string `protobuf:"bytes,4,opt,name=quantity_unit,json=quantityUnit,proto3" json:"quantity_unit,omitempty"`
	Density      string `protobuf:"bytes,5,opt,name=density,proto3" json:"density,omitempty"`
	DensityUnit  string `protobuf:"bytes,6,opt,name=density_unit,json=densityUnit,proto3" json:"density_unit,omitempty"`
}

func (x *Fuel) Reset() {
	*x = Fuel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_navblue_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fuel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fuel) ProtoMessage() {}

func (x *Fuel) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_navblue_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fuel.ProtoReflect.Descriptor instead.
func (*Fuel) Descriptor() ([]byte, []int) {
	return file_grpc_proto_navblue_proto_rawDescGZIP(), []int{5}
}

func (x *Fuel) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Fuel) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Fuel) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *Fuel) GetQuantityUnit() string {
	if x != nil {
		return x.QuantityUnit
	}
	return ""
}

func (x *Fuel) GetDensity() string {
	if x != nil {
		return x.Density
	}
	return ""
}

func (x *Fuel) GetDensityUnit() string {
	if x != nil {
		return x.DensityUnit
	}
	return ""
}

var File_grpc_proto_navblue_proto protoreflect.FileDescriptor

var file_grpc_proto_navblue_proto_rawDesc = []byte{
	0x0a, 0x18, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x61, 0x76,
	0x62, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6e, 0x61, 0x76, 0x62,
	0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x11, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0xae, 0x0a, 0x0a, 0x12, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61,
	0x69, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x61, 0x69, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x61,
	0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65,
	0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x30, 0x0a, 0x14, 0x6f, 0x6e, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6f,
	0x6e, 0x77, 0x61, 0x72, 0x64, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75,
	0x72, 0x65, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3a, 0x0a, 0x19, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x61,
	0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x41, 0x69,
	0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x74, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x61, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x64,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74,
	0x64, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x61,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x44, 0x61,
	0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x61, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x41, 0x61, 0x12, 0x31, 0x0a,
	0x14, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x69, 0x72,
	0x63, 0x72, 0x61, 0x66, 0x74, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x29,
	0x0a, 0x10, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61,
	0x66, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x61,
	0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x41, 0x69, 0x72,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x61,
	0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x72, 0x72, 0x69,
	0x76, 0x61, 0x6c, 0x41, 0x69, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x75, 0x72, 0x65, 0x47, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x67, 0x61, 0x74,
	0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c,
	0x47, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x61, 0x76,
	0x62, 0x6c, 0x75, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x52, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x40, 0x0a,
	0x0f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x61, 0x76, 0x62, 0x6c, 0x75, 0x65,
	0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52,
	0x0e, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x78, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x78, 0x42, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x78, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x78, 0x46, 0x6c, 0x6f, 0x77, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x73, 0x18, 0x1d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6e, 0x61,
	0x76, 0x62, 0x6c, 0x75, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x06, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x67, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x6b,
	0x65, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x61, 0x67, 0x73, 0x42, 0x6f,
	0x6f, 0x6b, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x05, 0x66, 0x75, 0x65, 0x6c, 0x73, 0x18, 0x1f, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x61, 0x76, 0x62, 0x6c, 0x75, 0x65, 0x2e, 0x46, 0x75,
	0x65, 0x6c, 0x52, 0x05, 0x66, 0x75, 0x65, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x72, 0x65,
	0x77, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x49,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x6b, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x6b, 0x22, 0xb3, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6f, 0x66, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x66, 0x66,
	0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x5f,
	0x6f, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x54, 0x61, 0x6b, 0x65, 0x4f, 0x66, 0x66, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x6f, 0x75, 0x63, 0x68,
	0x44, 0x6f, 0x77, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x6e, 0x22, 0xce, 0x01, 0x0a,
	0x0e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x2e, 0x0a, 0x13, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6f, 0x66, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x66, 0x66, 0x12,
	0x2c, 0x0a, 0x12, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x6b,
	0x65, 0x5f, 0x6f, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x6b, 0x65, 0x4f, 0x66, 0x66, 0x12, 0x30, 0x0a,
	0x14, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68,
	0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x44, 0x6f, 0x77, 0x6e, 0x12,
	0x2c, 0x0a, 0x12, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x6e, 0x22, 0x4b, 0x0a,
	0x05, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x64, 0x65, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x32,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x04, 0x46,
	0x75, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x32, 0x57, 0x0a,
	0x0e, 0x4e, 0x61, 0x76, 0x62, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x45, 0x0a, 0x0a, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x2e,
	0x6e, 0x61, 0x76, 0x62, 0x6c, 0x75, 0x65, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6e, 0x61, 0x76, 0x62,
	0x6c, 0x75, 0x65, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_proto_navblue_proto_rawDescOnce sync.Once
	file_grpc_proto_navblue_proto_rawDescData = file_grpc_proto_navblue_proto_rawDesc
)

func file_grpc_proto_navblue_proto_rawDescGZIP() []byte {
	file_grpc_proto_navblue_proto_rawDescOnce.Do(func() {
		file_grpc_proto_navblue_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_proto_navblue_proto_rawDescData)
	})
	return file_grpc_proto_navblue_proto_rawDescData
}

var file_grpc_proto_navblue_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_grpc_proto_navblue_proto_goTypes = []interface{}{
	(*FlightByIdRequest)(nil),  // 0: navblue.FlightByIdRequest
	(*FlightByIdResponse)(nil), // 1: navblue.FlightByIdResponse
	(*ActualTimes)(nil),        // 2: navblue.ActualTimes
	(*EstimatedTimes)(nil),     // 3: navblue.EstimatedTimes
	(*Delay)(nil),              // 4: navblue.Delay
	(*Fuel)(nil),               // 5: navblue.Fuel
}
var file_grpc_proto_navblue_proto_depIdxs = []int32{
	2, // 0: navblue.FlightByIdResponse.actual_times:type_name -> navblue.ActualTimes
	3, // 1: navblue.FlightByIdResponse.estimated_times:type_name -> navblue.EstimatedTimes
	4, // 2: navblue.FlightByIdResponse.delays:type_name -> navblue.Delay
	5, // 3: navblue.FlightByIdResponse.fuels:type_name -> navblue.Fuel
	0, // 4: navblue.NavblueService.FlightById:input_type -> navblue.FlightByIdRequest
	1, // 5: navblue.NavblueService.FlightById:output_type -> navblue.FlightByIdResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_grpc_proto_navblue_proto_init() }
func file_grpc_proto_navblue_proto_init() {
	if File_grpc_proto_navblue_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_proto_navblue_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlightByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_navblue_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlightByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_navblue_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_navblue_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimatedTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_navblue_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Delay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_navblue_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fuel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_proto_navblue_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_proto_navblue_proto_goTypes,
		DependencyIndexes: file_grpc_proto_navblue_proto_depIdxs,
		MessageInfos:      file_grpc_proto_navblue_proto_msgTypes,
	}.Build()
	File_grpc_proto_navblue_proto = out.File
	file_grpc_proto_navblue_proto_rawDesc = nil
	file_grpc_proto_navblue_proto_goTypes = nil
	file_grpc_proto_navblue_proto_depIdxs = nil
}
